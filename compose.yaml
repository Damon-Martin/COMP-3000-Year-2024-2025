services:
  auth-server:
    build:
      context: ./auth-server
      dockerfile: .dockerfile
    container_name: auth-server
    env_file:
      - path: ./front-end/.env.local
        required: true

  back-end:
    build:
      context: ./back-end
      dockerfile: .dockerfile
    container_name: back-end
    env_file:
      - path: ./front-end/.env.local
        required: true

  front-end:
    build:
      context: ./front-end
      dockerfile: .dockerfile
    container_name: front-end

  db:
    image: mongo
    container_name: MongoDB
    restart: always
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: example
    ports:
      - 27017:27017

  nginx-front-end:
    image: nginx:alpine
    volumes:
      - ./nginx/front-end.conf:/etc/nginx/nginx.conf
      - ./comp3000-el-comercio.xyz-ssl-bundle:/etc/nginx/ssl:ro  # Attatch PorkBun SLL Bundle
    ports:
      - "443:443"  # Expose HTTPS to the outside world
    depends_on:
      - front-end

  nginx-auth:
    image: nginx:alpine
    volumes:
      - ./nginx/auth-server.conf:/etc/nginx/nginx.conf
      - ./comp3000-el-comercio.xyz-ssl-bundle:/etc/nginx/ssl:ro  # Attatch PorkBun SLL Bundle
    ports:
      - "4000:4000"  # Expose HTTPS to the outside world
    depends_on:
      - auth-server
  
  nginx-back-end:
    image: nginx:alpine
    volumes:
      - ./nginx/back-end.conf:/etc/nginx/nginx.conf
      - ./comp3000-el-comercio.xyz-ssl-bundle:/etc/nginx/ssl:ro  # Attatch PorkBun SLL Bundle
    ports:
      - "5000:5000"  # Expose HTTPS to the outside world
    depends_on:
      - back-end